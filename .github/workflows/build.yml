name: build

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'   # builds net8 projects; keep or bump if you switch TFMs

      # Create a solution and add all projects (no fragile globs)
      - name: Create or reuse solution
      shell: bash
      run: |
        SOL=ConduitR.sln
        if [ -f "$SOL" ]; then
          echo "Using existing $SOL"
        else
          dotnet new sln -n ConduitR
        fi
        # add all csproj under src/, samples/, tests/ if not already included
        mapfile -t PROJS < <(find src samples tests -type f -name "*.csproj" | sort)
        # list once to avoid repeated CLI calls
        dotnet sln "$SOL" list || true
        for p in "${PROJS[@]}"; do
          if dotnet sln "$SOL" list | grep -Fq "$p"; then
            echo "Already in solution: $p"
          else
            dotnet sln "$SOL" add "$p"
          fi
        done


      - name: Restore
        run: dotnet restore ConduitR.sln

      - name: Build
        run: dotnet build -c Release ConduitR.sln --no-restore

      - name: Test
        run: dotnet test -c Release ConduitR.sln --no-build --verbosity normal

      # ---------- Pre-release on pushes to main ----------
      - name: Compute prerelease version
        if: github.ref == 'refs/heads/main'
        shell: bash
        run: |
          BASE="0.1.0"                   # bump this when starting a new pre-release train
          DATE=$(date -u +%Y%m%dT%H%M)
          SHA=$(git rev-parse --short "$GITHUB_SHA")
          echo "PKG_VER=${BASE}-pre.${DATE}.${SHA}" >> $GITHUB_ENV
          echo "PKG_VER=$PKG_VER"

      - name: Pack (pre-release)
        if: github.ref == 'refs/heads/main'
        run: |
          dotnet pack src/ConduitR.Abstractions/ConduitR.Abstractions.csproj -c Release -o artifacts -p:PackageVersion=${PKG_VER}
          dotnet pack src/ConduitR/ConduitR.csproj -c Release -o artifacts -p:PackageVersion=${PKG_VER}
          dotnet pack src/ConduitR.DependencyInjection/ConduitR.DependencyInjection.csproj -c Release -o artifacts -p:PackageVersion=${PKG_VER}

      - name: Publish prerelease to NuGet
        if: github.ref == 'refs/heads/main'
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push artifacts/*.nupkg -k "$NUGET_API_KEY" -s https://api.nuget.org/v3/index.json --skip-duplicate

      # ---------- Stable on tags vX.Y.Z ----------
      - name: Pack (stable)
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          dotnet pack src/ConduitR.Abstractions/ConduitR.Abstractions.csproj -c Release -o artifacts
          dotnet pack src/ConduitR/ConduitR.csproj -c Release -o artifacts
          dotnet pack src/ConduitR.DependencyInjection/ConduitR.DependencyInjection.csproj -c Release -o artifacts

      - name: Publish stable to NuGet
        if: startsWith(github.ref, 'refs/tags/v')
        env:
          NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
        run: dotnet nuget push artifacts/*.nupkg -k "$NUGET_API_KEY" -s https://api.nuget.org/v3/index.json --skip-duplicate
